{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Jumbo/Jumbo.js","components/Nav/Nav.js","App.js","index.js"],"names":["styles","img","width","height","objectFit","margin","padding","border","background","Card","props","react_default","a","createElement","className","style","alt","name","src","image","onClick","handleClick","id","wrapper","paddingTop","display","flexFlow","justifyContent","alignContent","overflow","Wrapper","children","Jumbo","nav","content","color","textAlign","fontSize","Nav","href","score","topScore","guessesArr","App","state","images","clicked","console","log","_this","updateScore","shuffleCards","guess","includes","alert","setState","push","length","i","j","Math","floor","random","_ref","_this2","this","components_Nav_Nav","components_Jumbo_Jumbo","components_Wrapper_Wrapper","map","friend","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bcf21ce3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst styles = {\n  img: {\n    width: 200,\n    height: 200,\n    objectFit: \"scale-down\",\n    margin: 10,\n    padding: 10,\n    border: \"solid 1px white\",\n    background: \"black\"\n  }\n}\n\nconst Card = props => (\n  <div className=\"col-3\">\n\n    <img style={styles.img} className=\"\" alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)} />\n\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\n\nconst styles = {\n    wrapper: {\n        paddingTop: 50,\n        height: \"100%\",\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        padding: 20,\n        justifyContent: \"space-around\",\n        alignContent: \"flex-start\",\n        overflow: \"auto\",\n        background: \"orange\",\n        border: \"solid 1px white\"\n      }\n}\n\nconst Wrapper = props => <div style={styles.wrapper}>{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./jumbo.css\";\n\nconst Jumbo = () => (\n\n    <div className=\"jumbotron jumbotron-fluid clouds text-center\">\n        <h1 className=\"display-4\">DragonBall Z Click</h1>\n        <p className=\"lead\">Click on a DBZ character to earn points, but don't click on any more than once!</p>\n    </div>\n\n);\n\nexport default Jumbo;\n","import React from \"react\";\n\nconst styles = {\n    nav: {\n        background: \"orange\",\n        padding: 20,\n        border: \"solid 1px white\"\n    },\n    content: {\n        color: \"black\",\n        width: \"30%\",\n        textAlign: \"center\",\n        fontSize: \"16pt\"\n    }\n}\n\nconst Nav = props => (\n    <nav style={styles.nav} className=\"navbar\">\n        <a style={styles.content} className=\"navbar-brand\" href=\"/\">DBZ Click</a>\n        <h3 style={styles.content}>Click on a DBZ Character to begin!</h3>\n        <h3 style={styles.content}>Score: {props.score} | Top Score: {props.topScore}</h3>\n\n    </nav>\n);\n\nexport default Nav;","import React, { Component } from \"react\";\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Jumbo from \"./components/Jumbo/Jumbo\";\nimport Nav from \"./components/Nav/Nav\";\nimport images from \"./images.json\";\n\nlet guessesArr = [];\n\nclass App extends Component {\n  // SETTING STATE\n  state = {\n    images,\n    score: 0,\n    topScore: 0,\n    clicked: guessesArr,\n  };\n\n  handleClick = id => {\n    console.log(id);\n    this.updateScore(id)\n    this.shuffleCards(images)\n  }\n\n  updateScore = guess => {\n    let score = this.state.score;\n    let topScore = this.state.topScore;\n    // INCREASE SCORE\n    if (!guessesArr.includes(guess)) {\n      guessesArr.push(guess);\n      score++\n      if (score >= topScore) {\n        topScore = score;\n      }\n\n      console.log('guessesArr', guessesArr);\n      console.log('score', score);\n      console.log('topscore', topScore);\n\n      // WIN\n      if (guessesArr.length === images.length) {\n        alert(\"YOU WIN!!!\");\n        score = 0;\n        guessesArr = [];\n      };\n      // UPDATE SCORE STATE\n      this.setState({\n        score: score,\n        topScore: topScore,\n        clicked: guessesArr\n      });\n\n      // USER CLICKED THE SAME IMAGE - INCORRECT\n    } else {\n      alert(\"You lost :( Try again!!!\");\n      guessesArr = [];\n      // UPDATE SCORE STATE\n      this.setState({\n        score: 0,\n        topScore: this.state.topScore,\n        clicked: guessesArr\n      });\n    };\n  }\n\n  // SHUFFLE IMAGES\n  shuffleCards = images => {\n    for (let i = images.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [images[i], images[j]] = [images[j], images[i]];\n    }\n    return this.setState({ images })\n  };\n\n  // RENDER CARD COMPONENT FOR EACH IMAGE\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Jumbo></Jumbo>\n        <Wrapper>\n          {this.state.images.map(friend => (\n            <Card\n              handleClick={this.handleClick}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"../src/App\";\nimport \"../src/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}